{"version":3,"file":"core.js","sources":["node_modules/sticky-module/esm/index.js","node_modules/basic-devtools/esm/index.js","node_modules/@ungap/structured-clone/esm/deserialize.js","node_modules/@ungap/structured-clone/esm/types.js","node_modules/@ungap/structured-clone/esm/serialize.js","node_modules/@ungap/structured-clone/esm/json.js","node_modules/coincident/esm/channel.js","node_modules/proxy-target/esm/types.js","node_modules/proxy-target/esm/traps.js","node_modules/coincident/esm/shared/traps.js","node_modules/coincident/esm/fallback.js","node_modules/coincident/esm/index.js","node_modules/proxy-target/esm/utils.js","node_modules/proxy-target/esm/array.js","node_modules/gc-hook/esm/index.js","node_modules/coincident/esm/shared/utils.js","node_modules/coincident/esm/shared/main.js","node_modules/coincident/esm/window/main.js","node_modules/coincident/esm/window/thread.js","node_modules/coincident/esm/shared/thread.js","node_modules/coincident/esm/shared/worker.js","node_modules/coincident/esm/window.js","node_modules/@ungap/with-resolvers/index.js","esm/fetch-utils.js","node_modules/codedent/esm/index.js","node_modules/plain-tag/esm/index.js","node_modules/html-escaper/esm/index.js","esm/interpreter/_io.js","esm/utils.js","esm/interpreter/_utils.js","esm/interpreter/_python.js","esm/python/mip.js","esm/interpreter/micropython.js","esm/interpreter/pyodide.js","esm/interpreter/ruby-wasm-wasi.js","esm/interpreter/wasmoon.js","esm/interpreters.js","esm/toml.js","esm/loader.js","node_modules/to-json-callback/esm/index.js","esm/hooks.js","esm/worker/hook.js","esm/worker/class.js","esm/worker/xworker.js","esm/errors.js","esm/worker/url.js","esm/script-handler.js","esm/listeners.js","esm/xworker.js","esm/custom.js","esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nexport const CHANNEL = 'ac6c1995-0675-46af-a99f-7fa298fa4e6d';\n\nexport const MAIN = 'M' + CHANNEL;\nexport const THREAD = 'T' + CHANNEL;\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DELETE = 'delete';\n","// encodeURIComponent('onmessage=({data:b})=>(Atomics.wait(b,0),postMessage(0))')\n\nexport default buffer => ({\n  value: new Promise(onmessage => {\n    let w = new Worker('data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))');\n    w.onmessage = onmessage;\n    w.postMessage(buffer);\n  })\n});\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {FUNCTION} from 'proxy-target/types';\n\nimport {CHANNEL} from './channel.js';\nimport {GET, HAS, SET} from './shared/traps.js';\nimport waitAsyncFallback from './fallback.js';\n\n// just minifier friendly for Blob Workers' cases\nconst {Int32Array, Map, SharedArrayBuffer, Uint16Array} = globalThis;\n\n// common constants / utilities for repeated operations\nconst {BYTES_PER_ELEMENT: I32_BYTES} = Int32Array;\nconst {BYTES_PER_ELEMENT: UI16_BYTES} = Uint16Array;\n\nconst {isArray} = Array;\nconst {notify, wait, waitAsync} = Atomics;\n\nconst waitInterrupt = (sb, delay, handler) => {\n  while (wait(sb, 0, 0, delay) === 'timed-out')\n    handler();\n};\n\n// retain buffers to transfer\nconst buffers = new WeakSet;\n\n// retain either main threads or workers global context\nconst context = new WeakMap;\n\nconst syncResult = {value: {then: fn => fn()}};\n\n// used to generate a unique `id` per each worker `postMessage` \"transaction\"\nlet uid = 0;\n\n/**\n * @typedef {Object} Interrupt used to sanity-check interrupts while waiting synchronously.\n * @prop {function} [handler] a callback invoked every `delay` milliseconds.\n * @prop {number} [delay=42] define `handler` invokes in terms of milliseconds.\n */\n\n/**\n * Create once a `Proxy` able to orchestrate synchronous `postMessage` out of the box.\n * @param {globalThis | Worker} self the context in which code should run\n * @param {{parse: (serialized: string) => any, stringify: (serializable: any) => string, transform?: (value:any) => any, interrupt?: () => void | Interrupt}} [JSON] an optional `JSON` like interface to `parse` or `stringify` content with extra `transform` ability.\n * @returns {ProxyHandler<globalThis> | ProxyHandler<Worker>}\n */\nconst coincident = (self, {parse = JSON.parse, stringify = JSON.stringify, transform, interrupt} = JSON) => {\n  // create a Proxy once for the given context (globalThis or Worker instance)\n  if (!context.has(self)) {\n    // ensure the CHANNEL and data are posted correctly\n    const post = (transfer, ...args) => self.postMessage({[CHANNEL]: args}, {transfer});\n\n    const handler = typeof interrupt === FUNCTION ? interrupt : interrupt?.handler;\n    const delay = interrupt?.delay || 42;\n    const decoder = new TextDecoder('utf-16');\n\n    // automatically uses sync wait (worker -> main)\n    // or fallback to async wait (main -> worker)\n    const waitFor = (isAsync, sb) => isAsync ?\n      (waitAsync || waitAsyncFallback)(sb, 0) :\n      ((handler ? waitInterrupt(sb, delay, handler) : wait(sb, 0)), syncResult);\n\n    // prevent Harakiri https://github.com/WebReflection/coincident/issues/18\n    let seppuku = false;\n\n    context.set(self, new Proxy(new Map, {\n      // there is very little point in checking prop in proxy for this very specific case\n      // and I don't want to orchestrate a whole roundtrip neither, as stuff would fail\n      // regardless if from Worker we access non existent Main callback, and vice-versa.\n      // This is here mostly to guarantee that if such check is performed, at least the\n      // get trap goes through and then it's up to developers guarantee they are accessing\n      // stuff that actually exists elsewhere.\n      [HAS]: (_, action) => typeof action === 'string' && !action.startsWith('_'),\n\n      // worker related: get any utility that should be available on the main thread\n      [GET]: (_, action) => action === 'then' ? null : ((...args) => {\n        // transaction id\n        const id = uid++;\n\n        // first contact: just ask for how big the buffer should be\n        // the value would be stored at index [1] while [0] is just control\n        let sb = new Int32Array(new SharedArrayBuffer(I32_BYTES * 2));\n\n        // if a transfer list has been passed, drop it from args\n        let transfer = [];\n        if (buffers.has(args.at(-1) || transfer))\n          buffers.delete(transfer = args.pop());\n\n        // ask for invoke with arguments and wait for it\n        post(transfer, id, sb, action, transform ? args.map(transform) : args);\n\n        // helps deciding how to wait for results\n        const isAsync = self !== globalThis;\n\n        // warn users about possible deadlock still allowing them\n        // to explicitly `proxy.invoke().then(...)` without blocking\n        let deadlock = 0;\n        if (seppuku && isAsync)\n          deadlock = setTimeout(console.warn, 1000, `💀🔒 - Possible deadlock if proxy.${action}(...args) is awaited`);\n\n        return waitFor(isAsync, sb).value.then(() => {\n          clearTimeout(deadlock);\n\n          // commit transaction using the returned / needed buffer length\n          const length = sb[1];\n\n          // filter undefined results\n          if (!length) return;\n\n          // calculate the needed ui16 bytes length to store the result string\n          const bytes = UI16_BYTES * length;\n\n          // round up to the next amount of bytes divided by 4 to allow i32 operations\n          sb = new Int32Array(new SharedArrayBuffer(bytes + (bytes % I32_BYTES)));\n\n          // ask for results and wait for it\n          post([], id, sb);\n          return waitFor(isAsync, sb).value.then(() => parse(\n            decoder.decode(new Uint16Array(sb.buffer).slice(0, length)))\n          );\n        });\n      }),\n\n      // main thread related: react to any utility a worker is asking for\n      [SET](actions, action, callback) {\n        const type = typeof callback;\n        if (type !== FUNCTION)\n          throw new Error(`Unable to assign ${action} as ${type}`);\n        // lazy event listener and logic handling, triggered once by setters actions\n        if (!actions.size) {\n          // maps results by `id` as they are asked for\n          const results = new Map;\n          // add the event listener once (first defined setter, all others work the same)\n          self.addEventListener('message', async (event) => {\n            // grub the very same library CHANNEL; ignore otherwise\n            const details = event.data?.[CHANNEL];\n            if (isArray(details)) {\n              // if early enough, avoid leaking data to other listeners\n              event.stopImmediatePropagation();\n              const [id, sb, ...rest] = details;\n              let error;\n              // action available: it must be defined/known on the main thread\n              if (rest.length) {\n                const [action, args] = rest;\n                if (actions.has(action)) {\n                  seppuku = true;\n                  try {\n                    // await for result either sync or async and serialize it\n                    const result = await actions.get(action)(...args);\n                    if (result !== void 0) {\n                      const serialized = stringify(transform ? transform(result) : result);\n                      // store the result for \"the very next\" event listener call\n                      results.set(id, serialized);\n                      // communicate the required SharedArrayBuffer length out of the\n                      // resulting serialized string\n                      sb[1] = serialized.length;\n                    }\n                  }\n                  catch (_) {\n                    error = _;\n                  }\n                  finally {\n                    seppuku = false;\n                  }\n                }\n                // unknown action should be notified as missing on the main thread\n                else {\n                  error = new Error(`Unsupported action: ${action}`);\n                }\n                // unlock the wait lock later on\n                sb[0] = 1;\n              }\n              // no action means: get results out of the well known `id`\n              // wait lock automatically unlocked here as no `0` value would\n              // possibly ever land at index `0`\n              else {\n                const result = results.get(id);\n                results.delete(id);\n                // populate the SharedArrayBuffer with utf-16 chars code\n                for (let ui16a = new Uint16Array(sb.buffer), i = 0; i < result.length; i++)\n                  ui16a[i] = result.charCodeAt(i);\n              }\n              // release te worker waiting either the length or the result\n              notify(sb, 0);\n              if (error) throw error;\n            }\n          });\n        }\n        // store this action callback allowing the setter in the process\n        return !!actions.set(action, callback);\n      }\n    }));\n  }\n  return context.get(self);\n};\n\ncoincident.transfer = (...args) => (buffers.add(args), args);\n\nexport default coincident;\n","import { BIGINT, BOOLEAN, FUNCTION, NULL, NUMBER, OBJECT, STRING, SYMBOL, UNDEFINED } from './types.js';\n\nconst { isArray } = Array;\n\nexport { isArray };\n\nexport const invoke = value => /** @type {Function} */ (value)();\n\n/**\n * @template Value\n * @param {string} type\n * @param {Value} value\n * @returns {Value}\n */\nexport const reviver = (type, value) => value;\n\n/**\n * @template V\n * @typedef {[V]} Arr\n */\n\n/**\n * @template V\n * @typedef {() => V} Ctx\n */\n\n/**\n * @template T, V\n * @typedef {{t:T, v:V}} Obj\n */\n\n/**\n * @template V\n * @typedef {V extends bigint ? BIGINT : V extends boolean ? BOOLEAN : V extends null ? NULL : V extends number ? NUMBER : V extends string ? STRING : V extends symbol ? SYMBOL : V extends undefined ? UNDEFINED : V extends object ? OBJECT : never} TypeOf\n */\n\n/**\n * @template T, V\n * @param {T} t\n * @param {V} v\n * @returns {Obj<T, V>}\n */\nexport const obj = (t, v) => ({t, v});\n\n/**\n * @template V\n * @param {V} value\n * @returns {Ctx<V>}\n */\nexport const bound = value => Context.bind(value);\n\n/**\n * @template V, T\n * @param {V} value\n * @returns {V extends Ctx<T> ? ReturnType<V> : V}\n */\nexport const unbound = value => (\n  typeof value === FUNCTION ? invoke(value) : value\n);\n\n// This is needed to unlock *both* apply and construct\n// traps otherwise one of these might fail.\n// The 'use strict' directive is needed to allow\n// also primitive types to be bound.\nfunction Context() {\n  'use strict';\n  return this;\n}\n\n// TODO: is this really needed in here?\n// const { hasOwn } = Object;\n// const isConstructable = value => hasOwn(value, 'prototype');\n// const isFunction = value => typeof value === FUNCTION;\n","import { ARRAY, FUNCTION, NULL, OBJECT } from './types.js';\nimport { isArray, reviver, obj } from './utils.js';\n\nexport { bound, unbound } from './utils.js';\n\n/**\n * @template V\n * @typedef {import(\"./utils.js\").Arr<V>} Arr\n */\n\n/**\n * @template T, V\n * @typedef {import(\"./utils.js\").Obj<T, V>} Obj\n */\n\n/**\n * @template V\n * @typedef {import(\"./utils.js\").TypeOf<V>} TypeOf\n */\n\n/**\n * @template W, T, V\n * @typedef {W extends Function ? W : W extends Arr<V> ? W[0] : W extends Obj<T, V> ? W[\"v\"] : never} ValueOf\n */\n\n/**\n * @template {string} T\n * @template V\n * @param {T} type\n * @param {V} value\n * @returns {T extends typeof ARRAY ? Arr<V> : Obj<T, V>}\n */\nexport const target = (type, value) =>\n// @see https://github.com/microsoft/TypeScript/issues/33014\n// @ts-ignore\n(\n  type === ARRAY ?\n    (/** @type {Arr<V>} */ ([value])) :\n    obj(type, value)\n);\n\n/**\n * @template W, T, V\n * @param {W} wrap\n * @param {typeof reviver} [revive]\n * @returns\n */\nexport const unwrap = (wrap, revive = reviver) => {\n  /** @type {string} */\n  let type = typeof wrap, value = wrap;\n  if (type === OBJECT) {\n    if (isArray(wrap)) {\n      type = ARRAY;\n      value = wrap.at(0);\n    }\n    else\n      ({ t: type, v: value } = /** @type {Obj<string, any>} */ (wrap));\n  }\n  return revive(type, /** @type {ValueOf<W, T, V>} */ (value));\n};\n\nconst resolver = (type, value) => (\n  type === FUNCTION ? value : target(type, value)\n);\n\n/**\n * Returns a `{t, v}` pair if the value is not a function and not an array.\n * It returns the function or the array as they are otherwise.\n * @template V\n * @param {V} value\n * @param {Function} [resolve]\n * @returns {V extends Function ? V : V extends Array ? Arr<V> : Obj<TypeOf<V>, V>}\n */\nexport const wrap = (value, resolve = resolver) => {\n  const type = value === null ? NULL : typeof value;\n  return resolve(type === OBJECT && isArray(value) ? ARRAY : type, value);\n};\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    if (debug) console.debug(`Held value ${String(held)} not relevant anymore`);\n    onGarbageCollected(held);\n  }\n);\n\nconst handler = Object.create(null);\n\n/**\n * Register a generic reference to hold in memory, returning either an explicit replacement for it, if specified as optional extra option, or just a `ProxyHandler<hold>` to allow the GC to collect such proxy later on.\n * @template {object} H\n * @template R\n * @param {H} hold the reference to retain in memory until the returned value is not collected.\n * @param {(held:H) => void} onGarbageCollected the callback to invoke once the returned value is collected.\n * @param {{debug?: true, return?:R, token?:H | false}} [options] optionally override the returned value or the token to unregister. If `debug` is true it will log once FinalizationRegistry kicked in.\n * @returns {R | ProxyHandler<typeof hold>} a transparent proxy for the held reference or whatever override was passed as `return` field of the options.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, return: R, token = hold } = handler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  const target = R || new Proxy(hold, handler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","import { target as tv, wrap } from 'proxy-target/array';\n\nimport {\n  ARRAY,\n  OBJECT,\n  FUNCTION,\n  BOOLEAN,\n  NUMBER,\n  STRING,\n  UNDEFINED,\n  BIGINT,\n  SYMBOL,\n  NULL,\n} from 'proxy-target/types';\n\nconst {\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf\n} = Reflect;\n\nconst { assign, create } = Object;\n\nexport const TypedArray = getPrototypeOf(Int8Array);\n\nexport {\n  assign,\n  create,\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf\n};\n\nexport const augment = (descriptor, how) => {\n  const {get, set, value} = descriptor;\n  if (get) descriptor.get = how(get);\n  if (set) descriptor.set = how(set);\n  if (value) descriptor.value = how(value);\n  return descriptor;\n};\n\nexport const asEntry = transform => value => wrap(value, (type, value) => {\n  switch (type) {\n    case NULL:\n      return tv(NULL, value);\n    case OBJECT:\n      if (value === globalThis)\n        return tv(type, null);\n    case ARRAY:\n    case FUNCTION:\n      return transform(type, value);\n    case BOOLEAN:\n    case NUMBER:\n    case STRING:\n    case UNDEFINED:\n    case BIGINT:\n      return tv(type, value);\n    case SYMBOL: {\n      // handle known symbols\n      if (symbols.has(value))\n        return tv(type, symbols.get(value));\n      // handle `Symbol.for('...')` cases\n      let key = Symbol.keyFor(value);\n      if (key)\n        return tv(type, `.${key}`);\n    }\n  }\n  throw new TypeError(`Unable to handle this ${type}: ${String(value)}`);\n});\n\nconst symbols = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const symbol = value => {\n  if (value.startsWith('.'))\n    return Symbol.for(value.slice(1));\n  for (const [symbol, name] of symbols) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const transform = o => o;\n","import { target as tv, unwrap } from 'proxy-target/array';\nimport { create as createGCHook } from 'gc-hook';\n\nimport {\n  ARRAY,\n  OBJECT,\n  FUNCTION,\n  NUMBER,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'proxy-target/types';\n\nimport {\n  TypedArray,\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf,\n\n  assign,\n  create,\n  augment,\n  asEntry,\n  symbol,\n  transform\n} from './utils.js';\n\nimport {\n  APPLY,\n  CONSTRUCT,\n  DEFINE_PROPERTY,\n  DELETE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  GET_PROTOTYPE_OF,\n  HAS,\n  IS_EXTENSIBLE,\n  OWN_KEYS,\n  PREVENT_EXTENSION,\n  SET,\n  SET_PROTOTYPE_OF,\n  DELETE\n} from './traps.js';\n\nexport default (name, patch) => {\n  const eventsHandler = patch && new WeakMap;\n\n  // patch once main UI tread\n  if (patch) {\n    const { addEventListener } = EventTarget.prototype;\n    // this should never be on the way as it's extremely light and fast\n    // but it's necessary to allow \"preventDefault\" or other event invokes at distance\n    defineProperty(EventTarget.prototype, 'addEventListener', {\n      value(type, listener, ...options) {\n        if (options.at(0)?.invoke) {\n          if (!eventsHandler.has(this))\n            eventsHandler.set(this, new Map);\n          eventsHandler.get(this).set(type, [].concat(options[0].invoke));\n          delete options[0].invoke;\n        }\n        return addEventListener.call(this, type, listener, ...options);\n      }\n    });\n  }\n\n  const handleEvent = patch && (event => {\n    const {currentTarget, target, type} = event;\n    for (const method of eventsHandler.get(currentTarget || target)?.get(type) || [])\n      event[method]();\n  });\n\n  return function (thread, MAIN, THREAD, ...args) {\n    let id = 0, $ = this?.transform || transform;\n    const ids = new Map;\n    const values = new Map;\n\n    const {[THREAD]: __thread__} = thread;\n\n    const global = args.length ? assign(create(globalThis), ...args) : globalThis;\n\n    const result = asEntry((type, value) => {\n      if (!ids.has(value)) {\n        let sid;\n        // a bit apocalyptic scenario but if this main runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (values.has(sid = id++));\n        ids.set(value, sid);\n        values.set(sid, type === FUNCTION ? value : $(value));\n      }\n      return tv(type, ids.get(value));\n    });\n\n    const onGarbageCollected = value => {\n      __thread__(DELETE, tv(STRING, value));\n    };\n\n    const asValue = (type, value) => {\n      switch (type) {\n        case OBJECT:\n          if (value == null) return global;\n        case ARRAY:\n          if (typeof value === NUMBER) return values.get(value);\n          if (!(value instanceof TypedArray)) {\n            for (const key in value)\n              value[key] = target(value[key]);\n          }\n          return value;\n        case FUNCTION:\n          if (typeof value === STRING) {\n            if (!values.has(value)) {\n              const cb = function (...args) {\n                if (patch && args.at(0) instanceof Event) handleEvent(...args);\n                return __thread__(\n                  APPLY,\n                  tv(FUNCTION, value),\n                  result(this),\n                  args.map(result)\n                );\n              };\n              values.set(value, new WeakRef(cb));\n              return createGCHook(value, onGarbageCollected, {\n                return: cb,\n                token: false,\n              });\n            }\n            return values.get(value).deref();\n          }\n          return values.get(value);\n        case SYMBOL:\n          return symbol(value);\n      }\n      return value;\n    };\n\n    const target = entry => unwrap(entry, asValue);\n\n    const trapsHandler = {\n      [APPLY]: (target, thisArg, args) => result(target.apply(thisArg, args)),\n      [CONSTRUCT]: (target, args) => result(new target(...args)),\n      [DEFINE_PROPERTY]: (target, name, descriptor) => result(defineProperty(target, name, descriptor)),\n      [DELETE_PROPERTY]: (target, name) => result(deleteProperty(target, name)),\n      [GET_PROTOTYPE_OF]: target => result(getPrototypeOf(target)),\n      [GET]: (target, name) => result(target[name]),\n      [GET_OWN_PROPERTY_DESCRIPTOR]: (target, name) => {\n        const descriptor = getOwnPropertyDescriptor(target, name);\n        return descriptor ? tv(OBJECT, augment(descriptor, result)) : tv(UNDEFINED, descriptor);\n      },\n      [HAS]: (target, name) => result(name in target),\n      [IS_EXTENSIBLE]: target => result(isExtensible(target)),\n      [OWN_KEYS]: target => tv(ARRAY, ownKeys(target).map(result)),\n      [PREVENT_EXTENSION]: target => result(preventExtensions(target)),\n      [SET]: (target, name, value) => result(set(target, name, value)),\n      [SET_PROTOTYPE_OF]: (target, proto) => result(setPrototypeOf(target, proto)),\n      [DELETE](id) {\n        ids.delete(values.get(id));\n        values.delete(id);\n      }\n    };\n\n    thread[MAIN] = (trap, entry, ...args) => {\n      switch (trap) {\n        case APPLY:\n          args[0] = target(args[0]);\n          args[1] = args[1].map(target);\n          break;\n        case CONSTRUCT:\n          args[0] = args[0].map(target);\n          break;\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args;\n          args[0] = target(name);\n          const {get, set, value} = descriptor;\n          if (get) descriptor.get = target(get);\n          if (set) descriptor.set = target(set);\n          if (value) descriptor.value = target(value);\n          break;\n        }\n        default:\n          args = args.map(target);\n          break;\n      }\n      return trapsHandler[trap](target(entry), ...args);\n    };\n\n    return {\n      proxy: thread,\n      [name.toLowerCase()]: global,\n      [`is${name}Proxy`]: () => false\n    };\n  };\n};\n","import main from '../shared/main.js';\n\nexport default main('Window', true);\n","import thread from '../shared/thread.js';\n\nexport default thread('Window');\n","import { target as tv, unwrap, bound, unbound } from 'proxy-target/array';\nimport { create as createGCHook } from 'gc-hook';\n\nimport {\n  ARRAY,\n  OBJECT,\n  FUNCTION,\n  NUMBER,\n  STRING,\n  SYMBOL,\n} from 'proxy-target/types';\n\nimport {\n  TypedArray,\n  augment,\n  asEntry,\n  symbol,\n  transform,\n} from './utils.js';\n\nimport {\n  APPLY,\n  CONSTRUCT,\n  DEFINE_PROPERTY,\n  DELETE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  GET_PROTOTYPE_OF,\n  HAS,\n  IS_EXTENSIBLE,\n  OWN_KEYS,\n  PREVENT_EXTENSION,\n  SET,\n  SET_PROTOTYPE_OF,\n  DELETE\n} from './traps.js';\n\nexport default name => {\n  let id = 0;\n  const ids = new Map;\n  const values = new Map;\n\n  const __proxy__ = Symbol();\n\n  return function (main, MAIN, THREAD) {\n    const $ = this?.transform || transform;\n    const { [MAIN]: __main__ } = main;\n\n    const proxies = new Map;\n\n    const onGarbageCollected = value => {\n      proxies.delete(value);\n      __main__(DELETE, argument(value));\n    };\n\n    const argument = asEntry(\n      (type, value) => {\n        if (__proxy__ in value)\n          return unbound(value[__proxy__]);\n        if (type === FUNCTION) {\n          value = $(value);\n          if (!values.has(value)) {\n            let sid;\n            // a bit apocalyptic scenario but if this thread runs forever\n            // and the id does a whole int32 roundtrip we might have still\n            // some reference dangling around\n            while (values.has(sid = String(id++)));\n            ids.set(value, sid);\n            values.set(sid, value);\n          }\n          return tv(type, ids.get(value));\n        }\n        if (!(value instanceof TypedArray)) {\n          value = $(value);\n          for(const key in value)\n            value[key] = argument(value[key]);\n        }\n        return tv(type, value);\n      }\n    );\n\n    const register = (entry, type, value) => {\n      if (!proxies.has(value)) {\n        const target = type === FUNCTION ? bound(entry) : entry;\n        const proxy = new Proxy(target, proxyHandler);\n        proxies.set(value, new WeakRef(proxy));\n        return createGCHook(value, onGarbageCollected, {\n          return: proxy,\n          token: false,\n        });\n      }\n      return proxies.get(value).deref();\n    };\n\n    const fromEntry = entry => unwrap(entry, (type, value) => {\n      switch (type) {\n        case OBJECT:\n          if (value === null) return globalThis;\n        case ARRAY:\n          return typeof value === NUMBER ? register(entry, type, value) : value;\n        case FUNCTION:\n          return typeof value === STRING ? values.get(value) : register(entry, type, value);\n        case SYMBOL:\n          return symbol(value);\n      }\n      return value;\n    });\n\n    const result = (TRAP, target, ...args) => fromEntry(__main__(TRAP, unbound(target), ...args));\n\n    const proxyHandler = {\n      [APPLY]: (target, thisArg, args) => result(APPLY, target, argument(thisArg), args.map(argument)),\n      [CONSTRUCT]: (target, args) => result(CONSTRUCT, target, args.map(argument)),\n      [DEFINE_PROPERTY]: (target, name, descriptor) => {\n        const { get, set, value } = descriptor;\n        if (typeof get === FUNCTION) descriptor.get = argument(get);\n        if (typeof set === FUNCTION) descriptor.set = argument(set);\n        if (typeof value === FUNCTION) descriptor.value = argument(value);\n        return result(DEFINE_PROPERTY, target, argument(name), descriptor);\n      },\n      [DELETE_PROPERTY]: (target, name) => result(DELETE_PROPERTY, target, argument(name)),\n      [GET_PROTOTYPE_OF]: target => result(GET_PROTOTYPE_OF, target),\n      [GET]: (target, name) => name === __proxy__ ? target : result(GET, target, argument(name)),\n      [GET_OWN_PROPERTY_DESCRIPTOR]: (target, name) => {\n        const descriptor = result(GET_OWN_PROPERTY_DESCRIPTOR, target, argument(name));\n        return descriptor && augment(descriptor, fromEntry);\n      },\n      [HAS]: (target, name) => name === __proxy__ || result(HAS, target, argument(name)),\n      [IS_EXTENSIBLE]: target => result(IS_EXTENSIBLE, target),\n      [OWN_KEYS]: target => result(OWN_KEYS, target).map(fromEntry),\n      [PREVENT_EXTENSION]: target => result(PREVENT_EXTENSION, target),\n      [SET]: (target, name, value) => result(SET, target, argument(name), argument(value)),\n      [SET_PROTOTYPE_OF]: (target, proto) => result(SET_PROTOTYPE_OF, target, argument(proto)),\n    };\n\n    main[THREAD] = (trap, entry, ctx, args) => {\n      switch (trap) {\n        case APPLY:\n          return fromEntry(entry).apply(fromEntry(ctx), args.map(fromEntry));\n        case DELETE: {\n          const id = fromEntry(entry);\n          ids.delete(values.get(id));\n          values.delete(id);\n        }\n      }\n    };\n\n    const global = new Proxy(tv(OBJECT, null), proxyHandler);\n\n    return {\n      [name.toLowerCase()]: global,\n      [`is${name}Proxy`]: value => typeof value === OBJECT && !!value && __proxy__ in value,\n      proxy: main\n    };\n  };\n};\n","import {FUNCTION} from 'proxy-target/types';\nexport default typeof Worker === FUNCTION ? Worker : class {};\n","import {MAIN, THREAD} from './channel.js';\nimport $coincident from './index.js';\nimport main from './window/main.js';\nimport thread from './window/thread.js';\nimport Worker from './shared/worker.js';\n\nconst proxies = new WeakMap;\n\n/**\n * @typedef {object} Coincident\n * @property {ProxyHandler<globalThis>} proxy\n * @property {ProxyHandler<Window>} window\n * @property {(value: any) => boolean} isWindowProxy\n */\n\n/**\n * Create once a `Proxy` able to orchestrate synchronous `postMessage` out of the box.\n * In workers, returns a `{proxy, window, isWindowProxy}` namespace to reach main globals synchronously.\n * @param {Worker | globalThis} self the context in which code should run\n * @returns {ProxyHandler<Worker> | Coincident}\n */\nconst coincident = (self, ...args) => {\n  const proxy = $coincident(self, ...args);\n  if (!proxies.has(proxy)) {\n    const util = self instanceof Worker ? main : thread;\n    proxies.set(proxy, util.call(args.at(0), proxy, MAIN, THREAD));\n  }\n  return proxies.get(proxy);\n}\n\ncoincident.transfer = $coincident.transfer;\n\nexport default coincident;\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","/** @param {Response} response */\nexport const getBuffer = (response) => response.arrayBuffer();\n\n/** @param {Response} response */\nexport const getJSON = (response) => response.json();\n\n/** @param {Response} response */\nexport const getText = (response) => response.text();\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n/* c8 ignore stop */\n","import $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nexport const createOverload = (module, name) => ($, pre) => {\n    const method = module[name].bind(module);\n    module[name] = (interpreter, code, ...args) =>\n        method(interpreter, `${pre ? $ : code}\\n${pre ? code : $}`, ...args);\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[href=\"${href}\"]`)) onload();\n    document.head.append(\n        assign(\n            document.createElement('link'),\n            { rel: 'stylesheet', href, onload, onerror },\n        )\n    )\n});\n\nexport const isCSS = source => /\\.css/i.test(new URL(source).pathname);\n/* c8 ignore stop */\n\nexport {\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport { UNDEFINED } from 'proxy-target/types';\n\nimport { getBuffer } from '../fetch-utils.js';\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    FS.mkdirTree(PATH.dirname(absPath));\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n/* c8 ignore stop */\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nconst mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    // REQUIRES INTEGRATION TEST\n    /* c8 ignore start */\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    /* c8 ignore stop */\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchResolved = (config_fetch, url) =>\n    fetch(absoluteURL(url, base.get(config_fetch)));\n\nexport const base = new WeakMap();\n\n/* c8 ignore start */\nexport const fetchPaths = (module, interpreter, config_fetch) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchResolved(config_fetch, url)\n                .then(getBuffer)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchResolved(config_files, url)\n                .then(getBuffer)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\nconst RUNNING_IN_WORKER = typeof document === UNDEFINED;\n\nexport const fetchJSModules = ({ main, worker }) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, base.get(worker));\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, base.get(main));\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { io } from './_io.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const registerJSModule = (interpreter, name, value) => {\n    interpreter.registerJsModule(name, value);\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"from uio import StringIO\\nimport sys\\n\\nclass Response:\\n    def __init__(self, f):\\n        self.raw = f\\n        self.encoding = \\\"utf-8\\\"\\n        self._cached = None\\n\\n    def close(self):\\n        if self.raw:\\n            self.raw.close()\\n            self.raw = None\\n        self._cached = None\\n\\n    @property\\n    def content(self):\\n        if self._cached is None:\\n            try:\\n                self._cached = self.raw.read()\\n            finally:\\n                self.raw.close()\\n                self.raw = None\\n        return self._cached\\n\\n    @property\\n    def text(self):\\n        return str(self.content, self.encoding)\\n\\n    def json(self):\\n        import ujson\\n\\n        return ujson.loads(self.content)\\n\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\n\\n\\ntry:\\n    import js\\nexcept Exception as err:\\n    raise OSError(\\\"This version of urequests can only be used in the browser\\\")\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\n\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\n\\n\\ndef request(\\n    method,\\n    url,\\n    data=None,\\n    json=None,\\n    headers={},\\n    stream=None,\\n    auth=None,\\n    timeout=None,\\n    parse_headers=True,\\n):\\n    from js import XMLHttpRequest\\n\\n    xhr = XMLHttpRequest.new()\\n    xhr.withCredentials = False\\n\\n    if auth is not None:\\n        import ubinascii\\n\\n        username, password = auth\\n        xhr.open(method, url, False, username, password)\\n    else:\\n        xhr.open(method, url, False)\\n\\n    for name, value in headers.items():\\n        if name.lower() not in HEADERS_TO_IGNORE:\\n            xhr.setRequestHeader(name, value)\\n\\n    if timeout:\\n        xhr.timeout = int(timeout * 1000)\\n\\n    if json is not None:\\n        assert data is None\\n        import ujson\\n\\n        data = ujson.dumps(json)\\n        # s.write(b\\\"Content-Type: application/json\\\\r\\\\n\\\")\\n        xhr.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\")\\n\\n    xhr.send(data)\\n\\n    # Emulates the construction process in the original urequests\\n    resp = Response(StringIO(xhr.responseText))\\n    resp.status_code = xhr.status\\n    resp.reason = xhr.statusText\\n    resp.headers = xhr.getAllResponseHeaders()\\n\\n    return resp\\n\\n\\n# Other methods - head, post, put, patch, delete - are not used by\\n# mip and therefore not included\\n\\n\\ndef get(url, **kw):\\n    return request(\\\"GET\\\", url, **kw)\\n\\n\\n# Content below this line is from the Micropython MIP package and is covered\\n# by the applicable MIT license:\\n# \\n# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\n# DEALINGS IN THE SOFTWARE.\\n\\n# MicroPython package installer\\n# MIT license; Copyright (c) 2022 Jim Mussared\\n\\n\\n_PACKAGE_INDEX = const(\\\"https://micropython.org/pi/v2\\\")\\n_CHUNK_SIZE = 128\\n\\n\\n# This implements os.makedirs(os.dirname(path))\\ndef _ensure_path_exists(path):\\n    import os\\n\\n    split = path.split(\\\"/\\\")\\n\\n    # Handle paths starting with \\\"/\\\".\\n    if not split[0]:\\n        split.pop(0)\\n        split[0] = \\\"/\\\" + split[0]\\n\\n    prefix = \\\"\\\"\\n    for i in range(len(split) - 1):\\n        prefix += split[i]\\n        try:\\n            os.stat(prefix)\\n        except:\\n            os.mkdir(prefix)\\n        prefix += \\\"/\\\"\\n\\n\\n# Copy from src (stream) to dest (function-taking-bytes)\\ndef _chunk(src, dest):\\n    buf = memoryview(bytearray(_CHUNK_SIZE))\\n    while True:\\n        n = src.readinto(buf)\\n        if n == 0:\\n            break\\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\\n\\n\\n# Check if the specified path exists and matches the hash.\\ndef _check_exists(path, short_hash):\\n    import os\\n\\n    try:\\n        import binascii\\n        import hashlib\\n\\n        with open(path, \\\"rb\\\") as f:\\n            hs256 = hashlib.sha256()\\n            _chunk(f, hs256.update)\\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], \\\"utf-8\\\")\\n            return existing_hash == short_hash\\n    except:\\n        return False\\n\\n\\ndef _rewrite_url(url, branch=None):\\n    if not branch:\\n        branch = \\\"HEAD\\\"\\n    if url.startswith(\\\"github:\\\"):\\n        url = url[7:].split(\\\"/\\\")\\n        url = (\\n            \\\"https://raw.githubusercontent.com/\\\"\\n            + url[0]\\n            + \\\"/\\\"\\n            + url[1]\\n            + \\\"/\\\"\\n            + branch\\n            + \\\"/\\\"\\n            + \\\"/\\\".join(url[2:])\\n        )\\n    return url\\n\\n\\ndef _download_file(url, dest):\\n    response = get(url)\\n    try:\\n        if response.status_code != 200:\\n            print(\\\"Error\\\", response.status_code, \\\"requesting\\\", url)\\n            return False\\n\\n        print(\\\"Copying:\\\", dest)\\n        _ensure_path_exists(dest)\\n        with open(dest, \\\"wb\\\") as f:\\n            _chunk(response.raw, f.write)\\n\\n        return True\\n    finally:\\n        response.close()\\n\\n\\ndef _install_json(package_json_url, index, target, version, mpy):\\n    response = get(_rewrite_url(package_json_url, version))\\n    try:\\n        if response.status_code != 200:\\n            print(\\\"Package not found:\\\", package_json_url)\\n            return False\\n\\n        package_json = response.json()\\n    finally:\\n        response.close()\\n    for target_path, short_hash in package_json.get(\\\"hashes\\\", ()):\\n        fs_target_path = target + \\\"/\\\" + target_path\\n        if _check_exists(fs_target_path, short_hash):\\n            print(\\\"Exists:\\\", fs_target_path)\\n        else:\\n            file_url = \\\"{}/file/{}/{}\\\".format(index, short_hash[:2], short_hash)\\n            if not _download_file(file_url, fs_target_path):\\n                print(\\\"File not found: {} {}\\\".format(target_path, short_hash))\\n                return False\\n    for target_path, url in package_json.get(\\\"urls\\\", ()):\\n        fs_target_path = target + \\\"/\\\" + target_path\\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\\n            print(\\\"File not found: {} {}\\\".format(target_path, url))\\n            return False\\n    for dep, dep_version in package_json.get(\\\"deps\\\", ()):\\n        if not _install_package(dep, index, target, dep_version, mpy):\\n            return False\\n    return True\\n\\n\\ndef _install_package(package, index, target, version, mpy):\\n    if (\\n        package.startswith(\\\"http://\\\")\\n        or package.startswith(\\\"https://\\\")\\n        or package.startswith(\\\"github:\\\")\\n    ):\\n        if package.endswith(\\\".py\\\") or package.endswith(\\\".mpy\\\"):\\n            print(\\\"Downloading {} to {}\\\".format(package, target))\\n            return _download_file(\\n                _rewrite_url(package, version), target + \\\"/\\\" + package.rsplit(\\\"/\\\")[-1]\\n            )\\n        else:\\n            if not package.endswith(\\\".json\\\"):\\n                if not package.endswith(\\\"/\\\"):\\n                    package += \\\"/\\\"\\n                package += \\\"package.json\\\"\\n            print(\\\"Installing {} to {}\\\".format(package, target))\\n    else:\\n        if not version:\\n            version = \\\"latest\\\"\\n        print(\\\"Installing {} ({}) from {} to {}\\\".format(package, version, index, target))\\n\\n        mpy_version = (\\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, \\\"_mpy\\\") else \\\"py\\\"\\n        )\\n\\n        package = \\\"{}/package/{}/{}/{}.json\\\".format(index, mpy_version, package, version)\\n\\n    return _install_json(package, index, target, version, mpy)\\n\\n\\ndef install(package, index=None, target=None, version=None, mpy=True):\\n    if not target:\\n        for p in sys.path:\\n            if p.endswith(\\\"/lib\\\"):\\n                target = p\\n                break\\n        else:\\n            print(\\\"Unable to find lib dir in sys.path\\\")\\n            return\\n\\n    if not index:\\n        index = _PACKAGE_INDEX\\n\\n    if _install_package(package, index.rstrip(\\\"/\\\"), target, version, mpy):\\n        print(\\\"Done\\\")\\n    else:\\n        print(\\\"Package may be partially installed\\\")\\n\");","import { fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport mip from '../python/mip.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.21.0-279') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url) {\n        const { stderr, stdout, get } = stdio();\n        url = url.replace(/\\.m?js$/, '.wasm');\n        const interpreter = await get(loadMicroPython({ stderr, stdout, url }));\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        if (config.js_modules) await fetchJSModules(config.js_modules);\n\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages){\n            const mpyPackageManager = interpreter.pyimport('mip');\n            for (const mpyPackage of config.packages)\n                mpyPackageManager.install(mpyPackage);\n        }\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => (\n        value instanceof interpreter.PyProxy ?\n            interpreter.PyProxy.toJs(value) :\n            value\n    ),\n    writeFile: ({ FS, _module: { PATH, PATH_FS } }, path, buffer) =>\n        writeFile({ FS, PATH, PATH_FS }, path, buffer),\n};\n/* c8 ignore stop */\n","import { fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '0.25.0') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url) {\n        const { stderr, stdout, get } = stdio();\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, indexURL }),\n        );\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        if (config.js_modules) await fetchJSModules(config.js_modules);\n        if (config.packages) {\n            await interpreter.loadPackage('micropip');\n            const micropip = await interpreter.pyimport('micropip');\n            await micropip.install(config.packages, { keep_going: true });\n            micropip.destroy();\n        }\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => (\n        value instanceof interpreter.ffi.PyProxy ?\n            value.toJs(toJsOptions) :\n            value\n    ),\n    writeFile: ({ FS, PATH, _module: { PATH_FS } }, path, buffer) =>\n        writeFile({ FS, PATH, PATH_FS }, path, buffer),\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.2.0') =>\n        `https://cdn.jsdelivr.net/npm/ruby-3_2-wasm-wasi@${version}/dist/browser.esm.js`,\n    async engine({ DefaultRubyVM }, config, url) {\n        const response = await fetch(\n            `${url.slice(0, url.lastIndexOf('/'))}/ruby.wasm`,\n        );\n        const module = await WebAssembly.compile(await response.arrayBuffer());\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        if (config.js_modules) await fetchJSModules(config.js_modules);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        if (config.js_modules) await fetchJSModules(config.js_modules);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\nimport { base } from './interpreter/_utils.js';\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|https?:\\/\\/)/i.test(rest) \n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                for (const entry of ['files', 'fetch']) {\n                    const value = config?.[entry];\n                    if (value) base.set(value, baseURL);\n                }\n                for (const entry of ['main', 'worker']) {\n                    const value = config?.js_modules?.[entry];\n                    if (value) base.set(value, baseURL);\n                }\n                return engine(module, config, url);\n            });\n    },\n});\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nfor (const interpreter of [micropython, pyodide, ruby_wasm_wasi, wasmoon])\n    register(interpreter);\n","// lazy TOML parser (fast-toml might be a better alternative)\nconst TOML_LIB = 'https://cdn.jsdelivr.net/npm/basic-toml@0.3.1/es.js';\n\n/**\n * @param {string} text TOML text to parse\n * @returns {object} the resulting JS object\n */\nexport const parse = async (text) => (await import(/* webpackIgnore: true */TOML_LIB)).parse(text);\n","import { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { parse } from './toml.js';\nimport { getJSON, getText } from './fetch-utils.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nconst parseString = config => {\n    try {\n        return JSON.parse(config);\n    } catch (_) {\n        return parse(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        const [absolute, type] = getConfigURLAndType(config, configURL);\n        if (type === 'json') {\n            options = fetch(absolute).then(getJSON);\n        } else if (type === 'toml') {\n            options = fetch(absolute).then(getText).then(parse);\n        } else if (type === 'string') {\n            options = parseString(config);\n        } else if (type === 'object' && config) {\n            options = config;\n        } else if (type === 'txt' && typeof options === 'string') {\n            options = parseString(options);\n        }\n        config = absolute;\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import * as JSON from '@ungap/structured-clone/json';\nimport coincident from 'coincident/window';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport { getText } from '../fetch-utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n */\n\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        const worker = xworker();\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const bootstrap = fetch(url)\n            .then(getText)\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            });\n\n        const sync = assign(\n            coincident(worker, JSON).proxy,\n            { importJS, importCSS },\n        );\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            postMessage: {\n                value: (data, ...rest) =>\n                    bootstrap.then(() =>\n                        postMessage.call(worker, data, ...rest),\n                    ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            if (data instanceof Error) {\n                event.stopImmediatePropagation();\n                worker.onerror(create(event, {\n                    type: { value: 'error' },\n                    error: { value: data }\n                }));\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n","/* c8 ignore next */\nexport default () => new Worker(URL.createObjectURL(new Blob([\"const e=\\\"object\\\"==typeof self?self:globalThis,t=t=>((t,n)=>{const r=(e,n)=>(t.set(n,e),e),s=o=>{if(t.has(o))return t.get(o);const[a,i]=n[o];switch(a){case 0:case-1:return r(i,o);case 1:{const e=r([],o);for(const t of i)e.push(s(t));return e}case 2:{const e=r({},o);for(const[t,n]of i)e[s(t)]=s(n);return e}case 3:return r(new Date(i),o);case 4:{const{source:e,flags:t}=i;return r(new RegExp(e,t),o)}case 5:{const e=r(new Map,o);for(const[t,n]of i)e.set(s(t),s(n));return e}case 6:{const e=r(new Set,o);for(const t of i)e.add(s(t));return e}case 7:{const{name:t,message:n}=i;return r(new e[t](n),o)}case 8:return r(BigInt(i),o);case\\\"BigInt\\\":return r(Object(BigInt(i)),o)}return r(new e[a](i),o)};return s})(new Map,t)(0),n=\\\"\\\",{toString:r}={},{keys:s}=Object,o=e=>{const t=typeof e;if(\\\"object\\\"!==t||!e)return[0,t];const s=r.call(e).slice(8,-1);switch(s){case\\\"Array\\\":return[1,n];case\\\"Object\\\":return[2,n];case\\\"Date\\\":return[3,n];case\\\"RegExp\\\":return[4,n];case\\\"Map\\\":return[5,n];case\\\"Set\\\":return[6,n]}return s.includes(\\\"Array\\\")?[1,s]:s.includes(\\\"Error\\\")?[7,s]:[2,s]},a=([e,t])=>0===e&&(\\\"function\\\"===t||\\\"symbol\\\"===t),i=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const i=(e,t)=>{const s=r.push(e)-1;return n.set(t,s),s},c=r=>{if(n.has(r))return n.get(r);let[l,u]=o(r);switch(l){case 0:{let t=r;switch(u){case\\\"bigint\\\":l=8,t=r.toString();break;case\\\"function\\\":case\\\"symbol\\\":if(e)throw new TypeError(\\\"unable to serialize \\\"+u);t=null;break;case\\\"undefined\\\":return i([-1],r)}return i([l,t],r)}case 1:{if(u)return i([u,[...r]],r);const e=[],t=i([l,e],r);for(const t of r)e.push(c(t));return t}case 2:{if(u)switch(u){case\\\"BigInt\\\":return i([u,r.toString()],r);case\\\"Boolean\\\":case\\\"Number\\\":case\\\"String\\\":return i([u,r.valueOf()],r)}if(t&&\\\"toJSON\\\"in r)return c(r.toJSON());const n=[],p=i([l,n],r);for(const t of s(r))!e&&a(o(r[t]))||n.push([c(t),c(r[t])]);return p}case 3:return i([l,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return i([l,{source:e,flags:t}],r)}case 5:{const t=[],n=i([l,t],r);for(const[n,s]of r)(e||!a(o(n))&&!a(o(s)))&&t.push([c(n),c(s)]);return n}case 6:{const t=[],n=i([l,t],r);for(const n of r)!e&&a(o(n))||t.push(c(n));return n}}const{message:p}=r;return i([l,{name:u,message:p}],r)};return c})(!(t||n),!!t,new Map,r)(e),r},{parse:c,stringify:l}=JSON,u={json:!0,lossy:!0};var p=Object.freeze({__proto__:null,parse:e=>t(c(e)),stringify:e=>l(i(e,u))});const f=\\\"ac6c1995-0675-46af-a99f-7fa298fa4e6d\\\",h=\\\"M\\\"+f,d=\\\"T\\\"+f,g=\\\"array\\\",y=\\\"function\\\",m=\\\"null\\\",w=\\\"number\\\",_=\\\"object\\\",b=\\\"string\\\",E=\\\"symbol\\\",k=\\\"undefined\\\",v=\\\"apply\\\",T=\\\"construct\\\",S=\\\"defineProperty\\\",x=\\\"deleteProperty\\\",A=\\\"get\\\",O=\\\"getOwnPropertyDescriptor\\\",j=\\\"getPrototypeOf\\\",R=\\\"has\\\",P=\\\"isExtensible\\\",N=\\\"ownKeys\\\",I=\\\"preventExtensions\\\",$=\\\"set\\\",M=\\\"setPrototypeOf\\\",F=\\\"delete\\\";var H=e=>({value:new Promise((t=>{let n=new Worker(\\\"data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))\\\");n.onmessage=t,n.postMessage(e)}))})\\n/*! (c) Andrea Giammarchi - ISC */;const{Int32Array:W,Map:C,SharedArrayBuffer:D,Uint16Array:L}=globalThis,{BYTES_PER_ELEMENT:B}=W,{BYTES_PER_ELEMENT:U}=L,{isArray:J}=Array,{notify:q,wait:G,waitAsync:K}=Atomics,Y=new WeakSet,z=new WeakMap,X={value:{then:e=>e()}};let V=0;const Z=(e,{parse:t=JSON.parse,stringify:n=JSON.stringify,transform:r,interrupt:s}=JSON)=>{if(!z.has(e)){const o=(t,...n)=>e.postMessage({[f]:n},{transfer:t}),a=typeof s===y?s:s?.handler,i=s?.delay||42,c=new TextDecoder(\\\"utf-16\\\"),l=(e,t)=>e?(K||H)(t,0):(a?((e,t,n)=>{for(;\\\"timed-out\\\"===G(e,0,0,t);)n()})(t,i,a):G(t,0),X);let u=!1;z.set(e,new Proxy(new C,{[R]:(e,t)=>\\\"string\\\"==typeof t&&!t.startsWith(\\\"_\\\"),[A]:(n,s)=>\\\"then\\\"===s?null:(...n)=>{const a=V++;let i=new W(new D(2*B)),p=[];Y.has(n.at(-1)||p)&&Y.delete(p=n.pop()),o(p,a,i,s,r?n.map(r):n);const f=e!==globalThis;let h=0;return u&&f&&(h=setTimeout(console.warn,1e3,`💀🔒 - Possible deadlock if proxy.${s}(...args) is awaited`)),l(f,i).value.then((()=>{clearTimeout(h);const e=i[1];if(!e)return;const n=U*e;return i=new W(new D(n+n%B)),o([],a,i),l(f,i).value.then((()=>t(c.decode(new L(i.buffer).slice(0,e)))))}))},[$](t,s,o){const a=typeof o;if(a!==y)throw new Error(`Unable to assign ${s} as ${a}`);if(!t.size){const s=new C;e.addEventListener(\\\"message\\\",(async e=>{const o=e.data?.[f];if(J(o)){e.stopImmediatePropagation();const[a,i,...c]=o;let l;if(c.length){const[e,o]=c;if(t.has(e)){u=!0;try{const c=await t.get(e)(...o);if(void 0!==c){const e=n(r?r(c):c);s.set(a,e),i[1]=e.length}}catch(e){l=e}finally{u=!1}}else l=new Error(`Unsupported action: ${e}`);i[0]=1}else{const e=s.get(a);s.delete(a);for(let t=new L(i.buffer),n=0;n<e.length;n++)t[n]=e.charCodeAt(n)}if(q(i,0),l)throw l}}))}return!!t.set(s,o)}}))}return z.get(e)};Z.transfer=(...e)=>(Y.add(e),e);const{isArray:Q}=Array,ee=(e,t)=>t,te=e=>typeof e===y?(e=>e())(e):e;function ne(){return this}const re=(e,t)=>e===g?[t]:{t:e,v:t},se=(e,t=ee)=>{let n=typeof e,r=e;return n===_&&(Q(e)?(n=g,r=e.at(0)):({t:n,v:r}=e)),t(n,r)},oe=(e,t)=>e===y?t:re(e,t),ae=(e,t=oe)=>{const n=null===e?m:typeof e;return t(n===_&&Q(e)?g:n,e)},ie=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`Held value ${String(t)} not relevant anymore`),e(t)})),ce=Object.create(null),le=(e,t,{debug:n,return:r,token:s=e}=ce)=>{const o=r||new Proxy(e,ce),a=[o,[t,e,!!n]];return!1!==s&&a.push(s),ie.register(...a),o},{defineProperty:ue,deleteProperty:pe,getOwnPropertyDescriptor:fe,getPrototypeOf:he,isExtensible:de,ownKeys:ge,preventExtensions:ye,set:me,setPrototypeOf:we}=Reflect,{assign:_e,create:be}=Object,Ee=he(Int8Array),ke=(e,t)=>{const{get:n,set:r,value:s}=e;return n&&(e.get=t(n)),r&&(e.set=t(r)),s&&(e.value=t(s)),e},ve=e=>t=>ae(t,((t,n)=>{switch(t){case m:return re(m,n);case _:if(n===globalThis)return re(t,null);case g:case y:return e(t,n);case\\\"boolean\\\":case w:case b:case k:case\\\"bigint\\\":return re(t,n);case E:{if(Te.has(n))return re(t,Te.get(n));let e=Symbol.keyFor(n);if(e)return re(t,`.${e}`)}}throw new TypeError(`Unable to handle this ${t}: ${String(n)}`)})),Te=new Map(ge(Symbol).filter((e=>typeof Symbol[e]===E)).map((e=>[Symbol[e],e]))),Se=e=>{if(e.startsWith(\\\".\\\"))return Symbol.for(e.slice(1));for(const[t,n]of Te)if(n===e)return t},xe=e=>e;var Ae=((e,t)=>{const n=t&&new WeakMap;if(t){const{addEventListener:e}=EventTarget.prototype;ue(EventTarget.prototype,\\\"addEventListener\\\",{value(t,r,...s){return s.at(0)?.invoke&&(n.has(this)||n.set(this,new Map),n.get(this).set(t,[].concat(s[0].invoke)),delete s[0].invoke),e.call(this,t,r,...s)}})}const r=t&&(e=>{const{currentTarget:t,target:r,type:s}=e;for(const o of n.get(t||r)?.get(s)||[])e[o]()});return function(n,s,o,...a){let i=0,c=this?.transform||xe;const l=new Map,u=new Map,{[o]:p}=n,f=a.length?_e(be(globalThis),...a):globalThis,h=ve(((e,t)=>{if(!l.has(t)){let n;for(;u.has(n=i++););l.set(t,n),u.set(n,e===y?t:c(t))}return re(e,l.get(t))})),d=e=>{p(F,re(b,e))},m=(e,n)=>{switch(e){case _:if(null==n)return f;case g:if(typeof n===w)return u.get(n);if(!(n instanceof Ee))for(const e in n)n[e]=H(n[e]);return n;case y:if(typeof n===b){if(!u.has(n)){const e=function(...e){return t&&e.at(0)instanceof Event&&r(...e),p(v,re(y,n),h(this),e.map(h))};return u.set(n,new WeakRef(e)),le(n,d,{return:e,token:!1})}return u.get(n).deref()}return u.get(n);case E:return Se(n)}return n},H=e=>se(e,m),W={[v]:(e,t,n)=>h(e.apply(t,n)),[T]:(e,t)=>h(new e(...t)),[S]:(e,t,n)=>h(ue(e,t,n)),[x]:(e,t)=>h(pe(e,t)),[j]:e=>h(he(e)),[A]:(e,t)=>h(e[t]),[O]:(e,t)=>{const n=fe(e,t);return n?re(_,ke(n,h)):re(k,n)},[R]:(e,t)=>h(t in e),[P]:e=>h(de(e)),[N]:e=>re(g,ge(e).map(h)),[I]:e=>h(ye(e)),[$]:(e,t,n)=>h(me(e,t,n)),[M]:(e,t)=>h(we(e,t)),[F](e){l.delete(u.get(e)),u.delete(e)}};return n[s]=(e,t,...n)=>{switch(e){case v:n[0]=H(n[0]),n[1]=n[1].map(H);break;case T:n[0]=n[0].map(H);break;case S:{const[e,t]=n;n[0]=H(e);const{get:r,set:s,value:o}=t;r&&(t.get=H(r)),s&&(t.set=H(s)),o&&(t.value=H(o));break}default:n=n.map(H)}return W[e](H(t),...n)},{proxy:n,[e.toLowerCase()]:f,[`is${e}Proxy`]:()=>!1}}})(\\\"Window\\\",!0),Oe=(e=>{let t=0;const n=new Map,r=new Map,s=Symbol();return function(o,a,i){const c=this?.transform||xe,{[a]:l}=o,u=new Map,p=e=>{u.delete(e),l(F,f(e))},f=ve(((e,o)=>{if(s in o)return te(o[s]);if(e===y){if(o=c(o),!r.has(o)){let e;for(;r.has(e=String(t++)););n.set(o,e),r.set(e,o)}return re(e,n.get(o))}if(!(o instanceof Ee)){o=c(o);for(const e in o)o[e]=f(o[e])}return re(e,o)})),h=(e,t,n)=>{if(!u.has(n)){const r=t===y?(e=>ne.bind(e))(e):e,s=new Proxy(r,k);return u.set(n,new WeakRef(s)),le(n,p,{return:s,token:!1})}return u.get(n).deref()},d=e=>se(e,((t,n)=>{switch(t){case _:if(null===n)return globalThis;case g:return typeof n===w?h(e,t,n):n;case y:return typeof n===b?r.get(n):h(e,t,n);case E:return Se(n)}return n})),m=(e,t,...n)=>d(l(e,te(t),...n)),k={[v]:(e,t,n)=>m(v,e,f(t),n.map(f)),[T]:(e,t)=>m(T,e,t.map(f)),[S]:(e,t,n)=>{const{get:r,set:s,value:o}=n;return typeof r===y&&(n.get=f(r)),typeof s===y&&(n.set=f(s)),typeof o===y&&(n.value=f(o)),m(S,e,f(t),n)},[x]:(e,t)=>m(x,e,f(t)),[j]:e=>m(j,e),[A]:(e,t)=>t===s?e:m(A,e,f(t)),[O]:(e,t)=>{const n=m(O,e,f(t));return n&&ke(n,d)},[R]:(e,t)=>t===s||m(R,e,f(t)),[P]:e=>m(P,e),[N]:e=>m(N,e).map(d),[I]:e=>m(I,e),[$]:(e,t,n)=>m($,e,f(t),f(n)),[M]:(e,t)=>m(M,e,f(t))};o[i]=(e,t,s,o)=>{switch(e){case v:return d(t).apply(d(s),o.map(d));case F:{const e=d(t);n.delete(r.get(e)),r.delete(e)}}};const H=new Proxy(re(_,null),k);return{[e.toLowerCase()]:H,[`is${e}Proxy`]:e=>typeof e===_&&!!e&&s in e,proxy:o}}})(\\\"Window\\\"),je=typeof Worker===y?Worker:class{};const Re=new WeakMap,Pe=(e,...t)=>{const n=Z(e,...t);if(!Re.has(n)){const r=e instanceof je?Ae:Oe;Re.set(n,r.call(t.at(0),n,h,d))}return Re.get(n)};Pe.transfer=Z.transfer;const Ne={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},Ie=new WeakMap,$e=e=>{const t=e||console,n={stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return Ie.set(t,n),t}}},Me=(e,...t)=>Ne[typeof e](e,...t),{isArray:Fe}=Array,{assign:He,create:We,defineProperties:Ce,defineProperty:De,entries:Le}=Object,{all:Be,resolve:Ue}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Je=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href,qe=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},Ge=e=>Function(`'use strict';return (${e})`)(),Ke=Symbol.for(\\\"polyscript.js_modules\\\"),Ye=new Map;De(globalThis,Ke,{value:Ye}),new Proxy(Ye,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const ze=(e,t)=>!t.startsWith(\\\"_\\\"),Xe=(e,t)=>new Proxy(e,{has:ze,get:(e,n)=>e[t][n]}),Ve=(e,t)=>import(e).then((e=>{Ye.set(t,{...e})})),Ze=e=>new Promise(((t,n)=>{document.querySelector(`link[href=\\\"${e}\\\"]`)&&t(),document.head.append(He(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),Qe=e=>/\\\\.css/i.test(new URL(e).pathname);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const et=e=>e.arrayBuffer(),tt=e=>e.json(),nt=e=>e.text(),rt=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r);return e.mkdirTree(t.dirname(o)),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},st=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},ot=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},at=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},it=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},ct=(e,t)=>fetch(Je(t,lt.get(e))),lt=new WeakMap,ut=(e,t,n)=>Be((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(Fe(r))return r.map((n=>({url:it([e,n]),path:it([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:it([t,s])}]}))})(n).map((({url:r,path:s})=>ct(n,r).then(et).then((n=>e.writeFile(t,s,n)))))),pt=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,ft=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),ht=(e,t,n)=>Be((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of Le(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,ft(o,t))}else{const e=ft(s,t),a=pt(e,ft(o||\\\"./\\\",t));if(n.has(a))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:r,path:s})=>ct(n,r).then(et).then((n=>e.writeFile(t,s,n)))))),dt=typeof document===k,gt=({main:e,worker:t})=>{const n=[];if(t&&dt)for(let[e,r]of Le(t))e=Je(e,lt.get(t)),n.push(Ve(e,r));if(e&&!dt)for(let[t,r]of Le(e))t=Je(t,lt.get(e)),Qe(t)?Ze(t):n.push(Ve(t,r));return Be(n)},yt=(e,t)=>e.has(t),mt=e=>[...e.keys()];var wt=(e,t,n)=>{let r=globalThis[Ke],s=\\\"\\\";if(n){s=lt.get(n);for(let[e,t]of Le(n)){let n=r.get(t);n&&!Fe(n)||(r.set(t,n||(n=[])),n.push(e))}}return((e,t,n,r)=>new Proxy(e,{has:yt,ownKeys:mt,get:(e,s)=>{let o=e.get(s);if(Fe(o)){let a=o;o=null;for(let e of a)e=Je(e,r),Qe(e)?n.importCSS(e):(n.importJS(e,s),o=t[Ke].get(s));e.set(s,o)}return o}}))(r,e,t,s)};const _t=(e,t,n)=>{e.registerJsModule(t,n)},bt=(e,t,...n)=>{try{return e.runPython(Me(t),...n)}catch(t){Ie.get(e).stderr(t)}},Et=async(e,t,...n)=>{try{return await e.runPythonAsync(Me(t),...n)}catch(t){Ie.get(e).stderr(t)}},kt=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Ie.get(e).stderr(t)}};var vt=(new TextEncoder).encode('from uio import StringIO\\\\nimport sys\\\\n\\\\nclass Response:\\\\n    def __init__(self, f):\\\\n        self.raw = f\\\\n        self.encoding = \\\"utf-8\\\"\\\\n        self._cached = None\\\\n\\\\n    def close(self):\\\\n        if self.raw:\\\\n            self.raw.close()\\\\n            self.raw = None\\\\n        self._cached = None\\\\n\\\\n    @property\\\\n    def content(self):\\\\n        if self._cached is None:\\\\n            try:\\\\n                self._cached = self.raw.read()\\\\n            finally:\\\\n                self.raw.close()\\\\n                self.raw = None\\\\n        return self._cached\\\\n\\\\n    @property\\\\n    def text(self):\\\\n        return str(self.content, self.encoding)\\\\n\\\\n    def json(self):\\\\n        import ujson\\\\n\\\\n        return ujson.loads(self.content)\\\\n\\\\n\\\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\\\n\\\\n\\\\ntry:\\\\n    import js\\\\nexcept Exception as err:\\\\n    raise OSError(\\\"This version of urequests can only be used in the browser\\\")\\\\n\\\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\\\n\\\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\\\n\\\\n\\\\ndef request(\\\\n    method,\\\\n    url,\\\\n    data=None,\\\\n    json=None,\\\\n    headers={},\\\\n    stream=None,\\\\n    auth=None,\\\\n    timeout=None,\\\\n    parse_headers=True,\\\\n):\\\\n    from js import XMLHttpRequest\\\\n\\\\n    xhr = XMLHttpRequest.new()\\\\n    xhr.withCredentials = False\\\\n\\\\n    if auth is not None:\\\\n        import ubinascii\\\\n\\\\n        username, password = auth\\\\n        xhr.open(method, url, False, username, password)\\\\n    else:\\\\n        xhr.open(method, url, False)\\\\n\\\\n    for name, value in headers.items():\\\\n        if name.lower() not in HEADERS_TO_IGNORE:\\\\n            xhr.setRequestHeader(name, value)\\\\n\\\\n    if timeout:\\\\n        xhr.timeout = int(timeout * 1000)\\\\n\\\\n    if json is not None:\\\\n        assert data is None\\\\n        import ujson\\\\n\\\\n        data = ujson.dumps(json)\\\\n        # s.write(b\\\"Content-Type: application/json\\\\\\\\r\\\\\\\\n\\\")\\\\n        xhr.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\")\\\\n\\\\n    xhr.send(data)\\\\n\\\\n    # Emulates the construction process in the original urequests\\\\n    resp = Response(StringIO(xhr.responseText))\\\\n    resp.status_code = xhr.status\\\\n    resp.reason = xhr.statusText\\\\n    resp.headers = xhr.getAllResponseHeaders()\\\\n\\\\n    return resp\\\\n\\\\n\\\\n# Other methods - head, post, put, patch, delete - are not used by\\\\n# mip and therefore not included\\\\n\\\\n\\\\ndef get(url, **kw):\\\\n    return request(\\\"GET\\\", url, **kw)\\\\n\\\\n\\\\n# Content below this line is from the Micropython MIP package and is covered\\\\n# by the applicable MIT license:\\\\n# \\\\n# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\\\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\\\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\\\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\\\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\\\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\\\n# DEALINGS IN THE SOFTWARE.\\\\n\\\\n# MicroPython package installer\\\\n# MIT license; Copyright (c) 2022 Jim Mussared\\\\n\\\\n\\\\n_PACKAGE_INDEX = const(\\\"https://micropython.org/pi/v2\\\")\\\\n_CHUNK_SIZE = 128\\\\n\\\\n\\\\n# This implements os.makedirs(os.dirname(path))\\\\ndef _ensure_path_exists(path):\\\\n    import os\\\\n\\\\n    split = path.split(\\\"/\\\")\\\\n\\\\n    # Handle paths starting with \\\"/\\\".\\\\n    if not split[0]:\\\\n        split.pop(0)\\\\n        split[0] = \\\"/\\\" + split[0]\\\\n\\\\n    prefix = \\\"\\\"\\\\n    for i in range(len(split) - 1):\\\\n        prefix += split[i]\\\\n        try:\\\\n            os.stat(prefix)\\\\n        except:\\\\n            os.mkdir(prefix)\\\\n        prefix += \\\"/\\\"\\\\n\\\\n\\\\n# Copy from src (stream) to dest (function-taking-bytes)\\\\ndef _chunk(src, dest):\\\\n    buf = memoryview(bytearray(_CHUNK_SIZE))\\\\n    while True:\\\\n        n = src.readinto(buf)\\\\n        if n == 0:\\\\n            break\\\\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\\\\n\\\\n\\\\n# Check if the specified path exists and matches the hash.\\\\ndef _check_exists(path, short_hash):\\\\n    import os\\\\n\\\\n    try:\\\\n        import binascii\\\\n        import hashlib\\\\n\\\\n        with open(path, \\\"rb\\\") as f:\\\\n            hs256 = hashlib.sha256()\\\\n            _chunk(f, hs256.update)\\\\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], \\\"utf-8\\\")\\\\n            return existing_hash == short_hash\\\\n    except:\\\\n        return False\\\\n\\\\n\\\\ndef _rewrite_url(url, branch=None):\\\\n    if not branch:\\\\n        branch = \\\"HEAD\\\"\\\\n    if url.startswith(\\\"github:\\\"):\\\\n        url = url[7:].split(\\\"/\\\")\\\\n        url = (\\\\n            \\\"https://raw.githubusercontent.com/\\\"\\\\n            + url[0]\\\\n            + \\\"/\\\"\\\\n            + url[1]\\\\n            + \\\"/\\\"\\\\n            + branch\\\\n            + \\\"/\\\"\\\\n            + \\\"/\\\".join(url[2:])\\\\n        )\\\\n    return url\\\\n\\\\n\\\\ndef _download_file(url, dest):\\\\n    response = get(url)\\\\n    try:\\\\n        if response.status_code != 200:\\\\n            print(\\\"Error\\\", response.status_code, \\\"requesting\\\", url)\\\\n            return False\\\\n\\\\n        print(\\\"Copying:\\\", dest)\\\\n        _ensure_path_exists(dest)\\\\n        with open(dest, \\\"wb\\\") as f:\\\\n            _chunk(response.raw, f.write)\\\\n\\\\n        return True\\\\n    finally:\\\\n        response.close()\\\\n\\\\n\\\\ndef _install_json(package_json_url, index, target, version, mpy):\\\\n    response = get(_rewrite_url(package_json_url, version))\\\\n    try:\\\\n        if response.status_code != 200:\\\\n            print(\\\"Package not found:\\\", package_json_url)\\\\n            return False\\\\n\\\\n        package_json = response.json()\\\\n    finally:\\\\n        response.close()\\\\n    for target_path, short_hash in package_json.get(\\\"hashes\\\", ()):\\\\n        fs_target_path = target + \\\"/\\\" + target_path\\\\n        if _check_exists(fs_target_path, short_hash):\\\\n            print(\\\"Exists:\\\", fs_target_path)\\\\n        else:\\\\n            file_url = \\\"{}/file/{}/{}\\\".format(index, short_hash[:2], short_hash)\\\\n            if not _download_file(file_url, fs_target_path):\\\\n                print(\\\"File not found: {} {}\\\".format(target_path, short_hash))\\\\n                return False\\\\n    for target_path, url in package_json.get(\\\"urls\\\", ()):\\\\n        fs_target_path = target + \\\"/\\\" + target_path\\\\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\\\\n            print(\\\"File not found: {} {}\\\".format(target_path, url))\\\\n            return False\\\\n    for dep, dep_version in package_json.get(\\\"deps\\\", ()):\\\\n        if not _install_package(dep, index, target, dep_version, mpy):\\\\n            return False\\\\n    return True\\\\n\\\\n\\\\ndef _install_package(package, index, target, version, mpy):\\\\n    if (\\\\n        package.startswith(\\\"http://\\\")\\\\n        or package.startswith(\\\"https://\\\")\\\\n        or package.startswith(\\\"github:\\\")\\\\n    ):\\\\n        if package.endswith(\\\".py\\\") or package.endswith(\\\".mpy\\\"):\\\\n            print(\\\"Downloading {} to {}\\\".format(package, target))\\\\n            return _download_file(\\\\n                _rewrite_url(package, version), target + \\\"/\\\" + package.rsplit(\\\"/\\\")[-1]\\\\n            )\\\\n        else:\\\\n            if not package.endswith(\\\".json\\\"):\\\\n                if not package.endswith(\\\"/\\\"):\\\\n                    package += \\\"/\\\"\\\\n                package += \\\"package.json\\\"\\\\n            print(\\\"Installing {} to {}\\\".format(package, target))\\\\n    else:\\\\n        if not version:\\\\n            version = \\\"latest\\\"\\\\n        print(\\\"Installing {} ({}) from {} to {}\\\".format(package, version, index, target))\\\\n\\\\n        mpy_version = (\\\\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, \\\"_mpy\\\") else \\\"py\\\"\\\\n        )\\\\n\\\\n        package = \\\"{}/package/{}/{}/{}.json\\\".format(index, mpy_version, package, version)\\\\n\\\\n    return _install_json(package, index, target, version, mpy)\\\\n\\\\n\\\\ndef install(package, index=None, target=None, version=None, mpy=True):\\\\n    if not target:\\\\n        for p in sys.path:\\\\n            if p.endswith(\\\"/lib\\\"):\\\\n                target = p\\\\n                break\\\\n        else:\\\\n            print(\\\"Unable to find lib dir in sys.path\\\")\\\\n            return\\\\n\\\\n    if not index:\\\\n        index = _PACKAGE_INDEX\\\\n\\\\n    if _install_package(package, index.rstrip(\\\"/\\\"), target, version, mpy):\\\\n        print(\\\"Done\\\")\\\\n    else:\\\\n        print(\\\"Package may be partially installed\\\")\\\\n');var Tt={type:\\\"micropython\\\",module:(e=\\\"1.21.0-279\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n){const{stderr:r,stdout:s,get:o}=$e();n=n.replace(/\\\\.m?js$/,\\\".wasm\\\");const a=await o(e({stderr:r,stdout:s,url:n}));if(t.files&&await ht(this,a,t.files),t.fetch&&await ut(this,a,t.fetch),t.js_modules&&await gt(t.js_modules),this.writeFile(a,\\\"./mip.py\\\",vt),t.packages){const e=a.pyimport(\\\"mip\\\");for(const n of t.packages)e.install(n)}return a},registerJSModule:_t,run:bt,runAsync:Et,runEvent:kt,transform:(e,t)=>t instanceof e.PyProxy?e.PyProxy.toJs(t):t,writeFile:({FS:e,_module:{PATH:t,PATH_FS:n}},r,s)=>rt({FS:e,PATH:t,PATH_FS:n},r,s)};const St={dict_converter:Object.fromEntries};var xt={type:\\\"pyodide\\\",module:(e=\\\"0.25.0\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n){const{stderr:r,stdout:s,get:o}=$e(),a=n.slice(0,n.lastIndexOf(\\\"/\\\")),i=await o(e({stderr:r,stdout:s,indexURL:a}));if(t.files&&await ht(this,i,t.files),t.fetch&&await ut(this,i,t.fetch),t.js_modules&&await gt(t.js_modules),t.packages){await i.loadPackage(\\\"micropip\\\");const e=await i.pyimport(\\\"micropip\\\");await e.install(t.packages,{keep_going:!0}),e.destroy()}return i},registerJSModule:_t,run:bt,runAsync:Et,runEvent:kt,transform:(e,t)=>t instanceof e.ffi.PyProxy?t.toJs(St):t,writeFile:({FS:e,PATH:t,_module:{PATH_FS:n}},r,s)=>rt({FS:e,PATH:t,PATH_FS:n},r,s)};const At=\\\"ruby-wasm-wasi\\\",Ot=At.replace(/\\\\W+/g,\\\"_\\\");var jt={type:At,experimental:!0,module:(e=\\\"2.2.0\\\")=>`https://cdn.jsdelivr.net/npm/ruby-3_2-wasm-wasi@${e}/dist/browser.esm.js`,async engine({DefaultRubyVM:e},t,n){const r=await fetch(`${n.slice(0,n.lastIndexOf(\\\"/\\\"))}/ruby.wasm`),s=await WebAssembly.compile(await r.arrayBuffer()),{vm:o}=await e(s);return t.files&&await ht(this,o,t.files),t.fetch&&await ut(this,o,t.fetch),t.js_modules&&await gt(t.js_modules),o},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${Ot}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(Me(t),...n),runAsync:(e,t,...n)=>e.evalAsync(Me(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Ot}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${At}`)}};var Rt={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n){const{stderr:r,stdout:s,get:o}=$e(),a=await o((new e).createEngine());return a.global.getTable(t.Base,(e=>{a.global.setField(e,\\\"print\\\",s),a.global.setField(e,\\\"printErr\\\",r)})),n.files&&await ht(this,a,n.files),n.fetch&&await ut(this,a,n.fetch),n.js_modules&&await gt(n.js_modules),a},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(Me(t),...n)}catch(t){Ie.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(Me(t),...n)}catch(t){Ie.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Ie.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(ot(e,st(t)),t=at(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const Pt=new Map,Nt=new Map,It=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=Pt.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|https?:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>{Nt.set(t,e);for(const t of[\\\"files\\\",\\\"fetch\\\"]){const n=e?.[t];n&&lt.set(n,o)}for(const t of[\\\"main\\\",\\\"worker\\\"]){const n=e?.js_modules?.[t];n&&lt.set(n,o)}return s(r,e,n)}))}}),$t=e=>{for(const t of[].concat(e.type))Pt.set(t,e)};for(const e of[Tt,xt,jt,Rt])$t(e);const Mt=async e=>(await import(\\\"https://cdn.jsdelivr.net/npm/basic-toml@0.3.1/es.js\\\")).parse(e),Ft=e=>{try{return JSON.parse(e)}catch(t){return Mt(e)}},Ht=(e,t,n,r={})=>{if(t){const[e,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Je(e),n]})(t,n);\\\"json\\\"===s?r=fetch(e).then(tt):\\\"toml\\\"===s?r=fetch(e).then(nt).then(Mt):\\\"string\\\"===s?r=Ft(t):\\\"object\\\"===s&&t?r=t:\\\"txt\\\"===s&&\\\"string\\\"==typeof r&&(r=Ft(r)),t=e}return Ue(r).then((n=>It[e](n,t)))},Wt=\\\"BeforeRun\\\",Ct=\\\"AfterRun\\\",Dt=[`code${Wt}`,`code${Wt}Async`,`code${Ct}`,`code${Ct}Async`],Lt=[\\\"onWorker\\\",\\\"onReady\\\",`on${Wt}`,`on${Wt}Async`,`on${Ct}`,`on${Ct}Async`];function Bt(e,t){const{run:n,runAsync:r}=Pt.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const Ut=(e,t,n,r,s,o)=>{if(s||o){const a=Bt.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};try{new SharedArrayBuffer(4)}catch(e){throw new Error([\\\"Unable to use SharedArrayBuffer due insecure environment.\\\",\\\"Please read requirements in MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer#security_requirements\\\"].join(\\\"\\\\n\\\"))}let Jt,qt,Gt;const Kt=(e,t)=>{addEventListener(e,t||(async t=>{try{await Jt,qt(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{parse:Yt,stringify:zt}=p,{proxy:Xt,window:Vt,isWindowProxy:Zt}=Pe(self,{parse:Yt,stringify:zt,transform:e=>Gt?Gt(e):e}),Qt={sync:Xt,window:Vt,isWindowProxy:Zt,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Kt(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{Jt=(async()=>{try{const{id:o,tag:a,type:i,custom:c,version:l,config:u,async:p}=e,f=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(i,l),h=await Ht(f,t,n,u),d=Nt.get(f).js_modules?.main,g=We(Pt.get(i)),y=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:Ie.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,c||i,u,h);let m=\\\"run\\\";if(p&&(m+=\\\"Async\\\"),s){const e=((e,t)=>(n,r)=>{const s=e[t].bind(e);e[t]=(e,t,...o)=>s(e,`${r?n:t}\\\\n${r?t:n}`,...o)})(g,m);let t,n,r=\\\"\\\",o=\\\"\\\";for(const e of Dt){const t=s[e];if(t){const n=e.endsWith(\\\"Async\\\");(n&&p||!n&&!p)&&(e.startsWith(\\\"codeBefore\\\")?r=t:o=t)}}o&&e(o,!1),r&&e(r,!0);for(const e of Lt.slice(2)){const r=s[e];if(r){const s=e.endsWith(\\\"Async\\\");if(s&&p||!s&&!p){const s=Ge(r);e.startsWith(\\\"onBefore\\\")?t=s:n=s}}}Ut(g,y,Qt,p,t,n)}const{CustomEvent:w,document:_}=Vt,b=o&&_.getElementById(o)||null,E=e=>qe(b,c||i,e,!0,w),k=wt(Vt,Xt,d);let v=\\\"\\\";return((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,Xe(r,e));t.registerJSModule(n,s,r)})(i,g,h,k),g.registerJSModule(h,\\\"polyscript\\\",{xworker:Qt,currentScript:b,js_modules:k,get target(){return!v&&b&&(\\\"SCRIPT\\\"===a?b.after(He(_.createElement(`script-${c||i}`),{id:v=`${o}-target`})):(v=o,b.replaceChildren(),b.style.display=\\\"block\\\")),v}}),qt=g.runEvent.bind(g,h),Gt=g.transform.bind(g,h),b&&E(\\\"ready\\\"),s?.onReady&&Ge(s?.onReady).call(g,Bt.call(g,y,h),Qt),await g[m](h,r),b&&E(\\\"done\\\"),h}catch(e){postMessage(e)}})(),Kt(\\\"error\\\"),Kt(\\\"message\\\"),Kt(\\\"messageerror\\\")}));\\n\"],{type:'application/javascript'})),{type:'module'});","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import { $ } from 'basic-devtools';\n\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getText } from './fetch-utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n        });\n        dispatch(currentScript, type, 'ready');\n        const result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        if (isAsync) result.then(done);\n        else done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: { async: isAsync, config, env, target, version },\n            src,\n            type,\n        } = script;\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        /* c8 ignore start */\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                async: !!isAsync,\n                config: configValue\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker }\n            );\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).then(getText) : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, !!isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n/* c8 ignore start */ // attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport { JSModules, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker } from './xworker.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n            if (!known.has(node)) {\n                known.add(node);\n                const {\n                    interpreter: runtime,\n                    configURL,\n                    config,\n                    version,\n                    env,\n                    onerror,\n                    hooks,\n                } = options;\n\n                let error;\n                try {\n                    const worker = workerURL(node);\n                    if (worker) {\n                        const xworker = XWorker.call(new Hook(null, hooks), worker, {\n                            ...nodeInfo(node, type),\n                            version,\n                            configURL,\n                            type: runtime,\n                            custom: type,\n                            config: node.getAttribute('config') || config || {},\n                            async: node.hasAttribute('async')\n                        });\n                        defineProperty(node, 'xworker', { value: xworker });\n                        resolve({ type, xworker });\n                        return;\n                    }\n                }\n                // let the custom type handle errors via its `io`\n                catch (workerError) {\n                    error = workerError;\n                }\n\n                const name = getRuntimeID(runtime, version);\n                const id = env || `${name}${config ? `|${config}` : ''}`;\n                const { interpreter: engine, XWorker: Worker } = getDetails(\n                    type,\n                    id,\n                    name,\n                    version,\n                    config,\n                    configURL,\n                    runtime\n                );\n                engine.then((interpreter) => {\n                    const module = create(defaultRegistry.get(runtime));\n\n                    const hook = new Hook(interpreter, hooks);\n\n                    const XWorker = function XWorker(...args) {\n                        return Worker.apply(hook, args);\n                    };\n\n                    const resolved = {\n                        ...createResolved(\n                            module,\n                            type,\n                            structuredClone(configs.get(name)),\n                            interpreter,\n                        ),\n                        XWorker,\n                    };\n\n                    registerJSModules(runtime, module, interpreter, JSModules);\n                    module.registerJSModule(interpreter, 'polyscript', {\n                        XWorker,\n                        currentScript: type.startsWith('_') ? null : node,\n                        js_modules: JSModules,\n                    });\n\n                    // patch methods accordingly to hooks (and only if needed)\n                    for (const suffix of ['Run', 'RunAsync']) {\n                        const overload = createOverload(module, `r${suffix.slice(1)}`);\n\n                        let before = '';\n                        let after = '';\n\n                        for (const key of codeHooks) {\n                            const value = hooks?.main?.[key];\n                            if (value && key.endsWith(suffix)) {\n                                if (key.startsWith('codeBefore'))\n                                    before = dedent(value());\n                                else\n                                    after = dedent(value());\n                            }\n                        }\n\n                        // append code that should be executed *after* first\n                        if (after) overload(after, false);\n\n                        // prepend code that should be executed *before* (so that after is post-patched)\n                        if (before) overload(before, true);\n\n                        let beforeCB, afterCB;\n                        // ignore onReady and onWorker\n                        for (let i = 2; i < jsHooks.length; i++) {\n                            const key = jsHooks[i];\n                            const value = hooks?.main?.[key];\n                            if (value && key.endsWith(suffix)) {\n                                if (key.startsWith('onBefore'))\n                                    beforeCB = value;\n                                else\n                                    afterCB = value;\n                            }\n                        }\n                        polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n                    }\n\n                    details.queue = details.queue.then(() => {\n                        resolve(resolved);\n                        if (error) onerror?.(error, node);\n                        return hooks?.main?.onReady?.(resolved, node);\n                    });\n                });\n            }\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'wasmoon' | 'ruby-wasm-wasi'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","import stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { CUSTOM_SELECTORS, handleCustomType } from './custom.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport { define as $define, whenDefined as $whenDefined } from './custom.js';\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport { define, whenDefined, env, Hook, XWorker };\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","env","self","globalThis","deserialize","serialized","$","_","as","out","index","set","unpair","has","get","type","value","arr","object","key","Date","source","flags","RegExp","map","Map","Set","add","name","message","BigInt","Object","deserializer","EMPTY","toString","keys","typeOf","asString","call","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","parse","$parse","stringify","$stringify","JSON","options","str","any","CHANNEL","MAIN","THREAD","ARRAY","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","APPLY","CONSTRUCT","DEFINE_PROPERTY","DELETE_PROPERTY","GET","GET_OWN_PROPERTY_DESCRIPTOR","GET_PROTOTYPE_OF","HAS","IS_EXTENSIBLE","OWN_KEYS","PREVENT_EXTENSION","SET","SET_PROTOTYPE_OF","DELETE","waitAsyncFallback","buffer","Promise","onmessage","w","Worker","postMessage","Int32Array","SharedArrayBuffer","Uint16Array","BYTES_PER_ELEMENT","I32_BYTES","UI16_BYTES","isArray","Array","notify","wait","waitAsync","Atomics","buffers","WeakSet","context","WeakMap","syncResult","then","fn","uid","coincident","transform","interrupt","post","transfer","args","handler","delay","decoder","TextDecoder","waitFor","isAsync","sb","waitInterrupt","seppuku","Proxy","action","startsWith","id","at","delete","pop","deadlock","setTimeout","console","warn","clearTimeout","length","bytes","decode","actions","callback","Error","size","results","addEventListener","async","event","details","data","stopImmediatePropagation","rest","error","ui16a","charCodeAt","reviver","unbound","invoke","Context","this","target","t","v","unwrap","wrap","revive","resolver","resolve","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","create","hold","return","R","token","register","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","setPrototypeOf","Reflect","assign","TypedArray","Int8Array","augment","descriptor","how","asEntry","tv","symbols","Symbol","keyFor","filter","s","symbol","for","o","main","patch","eventsHandler","EventTarget","prototype","listener","concat","handleEvent","currentTarget","method","thread","ids","values","__thread__","global","sid","asValue","cb","Event","WeakRef","createGCHook","deref","trapsHandler","thisArg","apply","proto","trap","proxy","toLowerCase","__proxy__","__main__","proxies","argument","bind","bound","proxyHandler","fromEntry","TRAP","ctx","Worker$1","$coincident","util","withResolvers","a","b","c","reject","promise","getBuffer","response","arrayBuffer","getJSON","getText","text","dedent","string","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","io","stdio","init","localIO","stderr","stdout","log","engine","interpreter","tpl","unescape","un","defineProperties","all","absoluteURL","base","location","href","URL","nodeInfo","node","tag","tagName","dispatch","what","worker","CE","CustomEvent","dispatchEvent","bubbles","detail","createResolved","module","config","run","code","runAsync","runEvent","createOverload","pre","js_modules","jsModules","JSModules","field","modules","registerJSModules","registerJSModule","importJS","import","esm","importCSS","onload","onerror","querySelector","head","append","createElement","rel","isCSS","pathname","writeFile","FS","PATH","PATH_FS","absPath","mkdirTree","dirname","Uint8Array","canOwn","tree","join","current","branch","mkdir","cwd","joinPaths","parts","res","part","p","fetchResolved","config_fetch","url","fetch","fetchPaths","files","to_file","from","undefined","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","k","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","RUNNING_IN_WORKER","fetchJSModules","promises","registerJsModule","runPython","runPythonAsync","globals","mip","TextEncoder","encode","micropython","version","loadMicroPython","packages","mpyPackageManager","pyimport","mpyPackage","install","PyProxy","toJs","_module","toJsOptions","dict_converter","fromEntries","pyodide","loadPyodide","indexURL","loadPackage","micropip","keep_going","destroy","ffi","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wasmoon","LuaFactory","LuaLibraries","createEngine","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","configs","selectors","prefixes","baseURL","getConfigURLAndType","configURL","parseString","getRuntime","absolute","getRuntimeID","toJSONCallback","beforeRun","afterRun","js","resolved","polluteJS","ref","before","after","patched","Hook$1","constructor","hooks","onWorker","jsHooks","codeHooks","xworker","createObjectURL","Blob","isHook","Hook","bootstrap","sync","writable","configurable","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","element","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handle","handled","interpreters","getValue","prefix","getDetails","runtime","queue","XWorker","$xworker","closest","body","versionValue","configValue","targetValue","currentScript","done","execute","queueMicrotask","awaitInterpreter","available","r","ownerElement","el","getAttribute","addAllListeners","disabled","CUSTOM_SELECTORS","types","waitList","handleCustomType","selector","matches","known","custom","hasAttribute","workerError","defaultRegistry","hook","structuredClone","suffix","overload","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","stickyModule","dontBother","splice","indexOf","remove","forEach","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,39]}